// about possible cell protocoll optimization
// since the following code is inside a for loop, each optimization is amplified by the number of iterations.

if (relation.addr == address(0)) {
	(relation.code == 0)?	require(burned[relation.id] == _msgSender(), "8a"):				// 0. burned by sender
	(relation.code == 1)?	require(burned[relation.id] == receiver, "8b"):					// 1. burned by receiver
	(relation.code == 2)?	require(ownerOf(relation.id) == _msgSender(), "9a"):				// 2. owned by sender
	(relation.code == 3)?	require(ownerOf(relation.id) == receiver, "9b"):				// 3. owned by receiver
	(relation.code == 4)?	require(balanceOf(_msgSender()) >= relation.id, "10a"):				//  4. balance by sender
				require(balanceOf(receiver) >= relation.id, "10b");				//  5. balance by receiver
}else{
	(relation.code == 0)?	require(IRelation(relation.addr).burned[relation.id] == _msgSender(), "8a"):		// 0. burned by sender
	(relation.code == 1)?	require(IRelation(relation.addr).burned[relation.id] == receiver, "8b"):		// 1. burned by receiver
	(relation.code == 2)?	require(IRelation(relation.addr).ownerOf(relation.id) == _msgSender(), "9a"):		// 2. owned by sender
	(relation.code == 3)?	require(IRelation(relation.addr).ownerOf(relation.id) == receiver, "9b"):		// 3. owned by receiver
	(relation.code == 4)?	require(IRelation(relation.addr).balanceOf(_msgSender()) >= relation.id, "10a"):	//  4. balance by sender
				require(IRelation(relation.addr).balanceOf(receiver) >= relation.id, "10b");		//  5. balance by receiver
}

// or in alternative, with a further optimization if the number of relation.code should increase

if (relation.addr == address(0)) {
	(relation.code < 2)?
		(relation.code == 0)?	require(burned[relation.id] == _msgSender(), "8a"):		// 0. burned by sender
					require(burned[relation.id] == receiver, "8b"):			// 1. burned by receiver
	(relation.code < 4)?
		(relation.code == 2)?	require(ownerOf(relation.id) == _msgSender(), "9a"):		// 2. owned by sender
					require(ownerOf(relation.id) == receiver, "9b"):		// 3. owned by receiver
	//(relation.code < 6)?
		(relation.code == 4)?	require(balanceOf(_msgSender()) >= relation.id, "10a"):		//  4. balance by sender
					require(balanceOf(receiver) >= relation.id, "10b");		//  5. balance by receiver
}else{
	(relation.code < 2)?
		(relation.code == 0)?	require(IRelation(relation.addr).burned[relation.id] == _msgSender(), "8a"):		// 0. burned by sender
					require(IRelation(relation.addr).burned[relation.id] == receiver, "8b"):		// 1. burned by receiver
	(relation.code < 4)?	
		(relation.code == 2)?	require(IRelation(relation.addr).ownerOf(relation.id) == _msgSender(), "9a"):		// 2. owned by sender
					require(IRelation(relation.addr).ownerOf(relation.id) == receiver, "9b"):		// 3. owned by receiver
	//(relation.code < 6)?
		(relation.code == 4)?	require(IRelation(relation.addr).balanceOf(_msgSender()) >= relation.id, "10a"):	//  4. balance by sender
					require(IRelation(relation.addr).balanceOf(receiver) >= relation.id, "10b");		//  5. balance by receiver
}
